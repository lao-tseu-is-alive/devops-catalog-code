cd terraform-eks/
export AWS_ACCESS_KEY_ID=YOUR_OWN_HERE
export AWS_SECRET_ACCESS_KEY=YOUR_OWNAWS_SECRET_ACCESS_KEY_HERE
echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
export AWS_DEFAULT_REGION=us-east-1"     | tee go_admin_credentials_secrets
source go_admin_credentials_secrets 
terraform apply
terraform init
terraform apply
cat terraform.tfstate 
export TF_VAR_state_bucket=doc-$(date +%Y%m%d%H%M%S)
terraform apply
terraform show
cat backend.tf 
aws s3api list-buckets
terraform show
cat backend.tf   | sed -e "s@devops-catalog@$TF_VAR_state_bucket@g"   | tee backend.tf
terraform apply
terraform init
terraform apply
vim k8s-control-plane.tf 
open https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html
export K8S_VERSION=1.21
export RELEASE_VERSION=1.21.5-20220429
terraform apply     --var k8s_version=$K8S_VERSION     --var release_version=$RELEASE_VERSION
cat output.tf 
terraform refresh     --var k8s_version=$K8S_VERSION     --var release_version=$RELEASE_VERSION
terraform output cluster_name
export KUBECONFIG=$PWD/kubeconfig
aws eks update-kubeconfig     --name     $(terraform output --raw cluster_name)     --region     $(terraform output --raw region)
kubectl get nodes
kubectl cluster-info
kubectl version
cp files/k8s-worker-nodes.tf .
vim k8s-worker-nodes.tf 
terraform apply     --var k8s_version=$K8S_VERSION     --var release_version=$RELEASE_VERSION
kubectl get nodes
kubectl get pods
kubectl get namespaces
kubectl apply -f k8s-deployment_with_docker.yml
kubectl get pods
kubectl get service go-info-server-service
kubectl describe services go-info-server-service
curl http://a62fe79748d3348e381a3415dc177da6-1346422744.us-east-1.elb.amazonaws.com:8000
kubectl describe services go-info-server-service
kubectl describe services go-info-server-service | grep TargetPort
kubectl describe services go-info-server-service | grep 'LoadBalancer Ingress'


echo "Now it's time to cleanup everything if you don't need it anymore"
terraform destroy --var k8s_version=$K8S_VERSION     --var release_version=$RELEASE_VERSION
